apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prowlarr
  namespace: arrchive
spec:
  interval: 1m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/hotio/prowlarr
              tag: release@sha256:290f3c4b6621bfd7c9e5a99b5a9371cf3d304fbaec5b92026a6c2e62b307e3fa
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
    service:
      main:
        controller: main
        ports:
          http:
            port: 9696
    ingress:
      main:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - host: prowlarr.${SERVICE_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - secretName: prowlarr-tls
            hosts:
              - prowlarr.${SERVICE_DOMAIN}
    persistence:
      config:
        type: persistentVolumeClaim
        storageClass: cluster-replicated
        accessMode: ReadWriteOnce
        size: 1Gi
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr
  namespace: arrchive
spec:
  interval: 1m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/hotio/radarr
              tag: release@sha256:4e7448e0d92a95e32ad6320860e6b0932e46e643b7c13a802b874d3d7161ad47
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
    service:
      main:
        controller: main
        ports:
          http:
            port: 7878
    ingress:
      main:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - host: radarr.${SERVICE_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - secretName: radarr-tls
            hosts:
              - radarr.${SERVICE_DOMAIN}
    persistence:
      config:
        type: persistentVolumeClaim
        storageClass: cluster-replicated
        accessMode: ReadWriteOnce
        size: 1Gi
      data:
        type: persistentVolumeClaim
        storageClass: cluster-replicated
        accessMode: ReadWriteOnce
        size: 1Gi
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sonarr
  namespace: arrchive
spec:
  interval: 1m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/hotio/sonarr
              tag: release@sha256:cd609ffe86a89f4951c4845ebf9f5c8bd9b618cc3ace192d23adf462b6e795ca
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
    service:
      main:
        controller: main
        ports:
          http:
            port: 8989
    ingress:
      main:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - host: sonarr.${SERVICE_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - secretName: sonarr-tls
            hosts:
              - sonarr.${SERVICE_DOMAIN}
    persistence:
      config:
        type: persistentVolumeClaim
        storageClass: cluster-replicated
        accessMode: ReadWriteOnce
        size: 1Gi
      data:
        type: persistentVolumeClaim
        storageClass: cluster-replicated
        accessMode: ReadWriteOnce
        size: 1Gi
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: lidarr
  namespace: arrchive
spec:
  interval: 1m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/hotio/lidarr
              tag: release@sha256:c8be2a264dcdfd71286eecb656650e5034ffe54d5afe2958066ede2bd1afa5f9
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
    service:
      main:
        controller: main
        ports:
          http:
            port: 8686
    ingress:
      main:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - host: lidarr.${SERVICE_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - secretName: lidarr-tls
            hosts:
              - lidarr.${SERVICE_DOMAIN}
    persistence:
      config:
        type: persistentVolumeClaim
        storageClass: cluster-replicated
        accessMode: ReadWriteOnce
        size: 1Gi
      data:
        type: persistentVolumeClaim
        storageClass: cluster-replicated
        accessMode: ReadWriteOnce
        size: 1Gi
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: flaresolverr
  namespace: arrchive
spec:
  interval: 1m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/flaresolverr/flaresolverr
              tag: v3.3.21@sha256:f104ee51e5124d83cf3be9b37480649355d223f7d8f9e453d0d5ef06c6e3b31b
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
    service:
      main:
        controller: main
        ports:
          http:
            port: 8191
    ingress:
      main:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - host: flaresolverr.${SERVICE_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - secretName: flaresolverr-tls
            hosts:
              - flaresolverr.${SERVICE_DOMAIN}
