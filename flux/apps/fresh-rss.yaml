apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: fresh-rss-postgresql
  namespace: default
spec:
  imageName: ghcr.io/cloudnative-pg/postgresql:17.2-27@sha256:9308dcd778be66f56bdce8503916ab820d12420e7d1bc74fff0d663c95e126c3
  instances: 1
  managed:
    services:
      disabledDefaultServices: ["ro", "r"]
    roles:
      - name: backup
        passwordSecret:
          name: postgres-backup-user
        login: true
        superuser: false
        inRoles:
          - pg_read_all_data
  bootstrap:
    initdb:
      database: freshrss
      owner: freshrss
      secret:
        name: fresh-rss-postgres-user
  storage:
    size: 2Gi
    storageClass: cluster-replicated
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: fresh-rss
  namespace: default
spec:
  interval: 1m
  chart:
    spec:
      chart: app-template
      version: 3.7.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: freshrss/freshrss
              tag: 1.26.0-alpine@sha256:e2da5ebd38eb52ac03f1a1771ff77c0f429a849d14f1ef666f22ee2dd3c23c66
            env:
              TZ: Europe/Berlin
              BASE_URL: https://freshrss.${SERVICE_DOMAIN}
              CRON_MIN: '*/12'
              FRESHRSS_INSTALL:
                valueFrom:
                  secretKeyRef:
                    name: fresh-rss-config
                    key: freshrss-install
              FRESHRSS_USER:
                valueFrom:
                  secretKeyRef:
                    name: fresh-rss-config
                    key: freshrss-user
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            resources:
              requests:
                cpu: 20m
                memory: 100Mi
    service:
      main:
        controller: main
        ports:
          http:
            port: 80
    ingress:
      main:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts:
          - host: freshrss.${SERVICE_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - secretName: fresh-rss-tls
            hosts:
              - freshrss.${SERVICE_DOMAIN}
    persistence:
      data:
        type: persistentVolumeClaim
        storageClass: cluster-replicated
        accessMode: ReadWriteOnce
        size: 1Gi
        globalMounts:
          - path: /var/www/FreshRSS/data
# ---
# apiVersion: appcatalog.appscode.com/v1alpha1
# kind: AppBinding
# metadata:
#   name: fresh-rss-postgresql
#   namespace: default
# spec:
#   clientConfig:
#     service:
#       name: fresh-rss-postgresql-rw
#       port: 5432
#       scheme: postgresql
#   secret:
#     name: postgres-backup-user
#   type: postgres
# ---
# apiVersion: stash.appscode.com/v1beta1
# kind: BackupConfiguration
# metadata:
#   name: fresh-rss-postgresql
#   namespace: default
# spec:
#   schedule: "17 4/6 * * *"
#   task:
#     name: postgres-backup-17.2
#   repository:
#     name: b2-database-repo
#     namespace: stash-system
#   target:
#     alias: freshrss
#     ref:
#       apiVersion: appcatalog.appscode.com/v1alpha1
#       kind: AppBinding
#       name: fresh-rss-postgresql
#   retentionPolicy:
#     name: "staggered"
#     keepHourly: 6
#     keepDaily: 14
#     keepWeekly: 12
#     keepMonthly: 6
#     keepYearly: 2
#     prune: true
