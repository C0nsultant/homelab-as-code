apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: vaultwarden-postgresql
  namespace: default
spec:
  # Current Vaultwarden is built with PG 15, also use that as long as it is supported
  # https://github.com/dani-garcia/vaultwarden/blob/1.32.6/docker/Dockerfile.alpine#L56-L57
  # https://www.postgresql.org/support/versioning/
  imageName: ghcr.io/cloudnative-pg/postgresql:15.10-29
  instances: 1
  managed:
    services:
      disabledDefaultServices: ["ro", "r"]
    roles:
      - name: stashbackup
        passwordSecret:
          name: stash-postgres-backup-user
        login: true
        superuser: false
        inRoles:
          - pg_read_all_data
  bootstrap:
    initdb:
      database: vaultwarden
      owner: vaultwarden
      secret:
        name: bitwarden-postgres-user
  storage:
    size: 2Gi
    storageClass: cluster-replicated
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vaultwarden
  namespace: default
spec:
  interval: 1m
  chart:
    spec:
      chart: vaultwarden
      version: 0.31.3
      sourceRef:
        kind: HelmRepository
        name: guerzon
        namespace: flux-system
  values:
    image:
      registry: ghcr.io
      repository: dani-garcia/vaultwarden
      tag: 1.33.0-alpine@sha256:aae674bfa22cd21bb714a18d5d832984b34275272512984fc0dc62ea6cca6133
    resourceType: Deployment
    # TODO https://github.com/ttionya/vaultwarden-backup as sidedcar?
    storage:
      data:
        name: vaultwarden-data
        class: cluster-replicated
        accessMode: ReadWriteOnce
        size: 1Gi
    initContainers:
      - name: wait-for-postgresql
        # Current Vaultwarden is built with PG 15, also use that as long as it is supported
        # https://github.com/dani-garcia/vaultwarden/blob/1.32.6/docker/Dockerfile.alpine#L56-L57
        # https://www.postgresql.org/support/versioning/
        image: docker.io/bitnami/postgresql:15.10.0
        command:
          - /bin/sh
          - -ec
          - |
            until pg_isready -h vaultwarden-postgresql-rw -U vaultwarden; do
              echo "Waiting for PostgreSQL to be ready..."
              sleep 2
            done
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
    database:
      type: postgresql
      existingSecret: bitwarden-secrets
      existingSecretKey: database-uri
    pushNotifications:
      enabled: true
      existingSecret: bitwarden-secrets
      installationId:
        existingSecretKey: installation-id
      installationKey:
        existingSecretKey: installation-key
      relayUri: https://api.bitwarden.eu
      identityUri: https://identity.bitwarden.eu
    domain: https://bitwarden.${SERVICE_DOMAIN}
    # TODO hibp API key?
    signupsAllowed: false
    iconBlacklistNonGlobalIps: false
    adminToken:
      existingSecret: bitwarden-secrets
      existingSecretKey: admin-token
    timeZone: Europe/Berlin
    smtp:
      existingSecret: bitwarden-secrets
      host: ${SMTP_HOST}
      port: 465
      security: force_tls
      from: bitwarden@${SERVICE_DOMAIN}
      fromName: Bitwarden
      username:
        existingSecretKey: smtp-username
      password:
        existingSecretKey: smtp-password
      authMechanism: Login
    ingress:
      enabled: true
      class: nginx
      nginxIngressAnnotations: true
      additionalAnnotations:
        cert-manager.io/cluster-issuer: letsencrypt
        # https://github.com/guerzon/vaultwarden/issues/117
        nginx.ingress.kubernetes.io/server-snippet: |
          location /notifications {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_pass http://vaultwarden.default.svc:80;
          }
      tls: true
      hostname: bitwarden.${SERVICE_DOMAIN}
      tlsSecret: bitwarden-tls
---
apiVersion: appcatalog.appscode.com/v1alpha1
kind: AppBinding
metadata:
  name: bitwarden-postgresql
  namespace: default
spec:
  clientConfig:
    service:
      name: vaultwarden-postgresql-rw
      port: 5432
      scheme: postgresql
  secret:
    name: stash-postgres-backup-user
  type: postgres
---
apiVersion: stash.appscode.com/v1beta1
kind: BackupConfiguration
metadata:
  name: bitwarden-postgresql
  namespace: default
spec:
  schedule: "23 4/6 * * *"
  task:
    name: postgres-backup-15.1
  repository:
    name: b2-database-repo
    namespace: stash-system
  target:
    alias: bitwarden
    ref:
      apiVersion: appcatalog.appscode.com/v1alpha1
      kind: AppBinding
      name: bitwarden-postgresql
  retentionPolicy:
    name: "staggered"
    keepHourly: 6
    keepDaily: 14
    keepWeekly: 12
    keepMonthly: 6
    keepYearly: 2
    prune: true
