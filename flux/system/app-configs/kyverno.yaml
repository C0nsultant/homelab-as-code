apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: add-healthcheck-to-cronjobs
spec:
  failurePolicy: Fail
  rules:
    - name: make-containers-into-init-containers
      match:
        resources:
          kinds:
            - batch/v1/CronJob
      preconditions:
        all:
          - key: "{{ request.object.metadata.annotations.healthcheckSecret || '' }}"
            operator: NotEquals
            value: ""
      mutate:
        foreach:
          - list: request.object.spec.jobTemplate.spec.template.spec.containers
            preconditions:
              all:
                - key: "{{ element.name }}"
                  operator: NotEquals
                  value: "healthcheck"
            patchStrategicMerge:
              spec:
                jobTemplate:
                  spec:
                    template:
                      spec:
                        initContainers:
                          - "{{ element }}"
    - name: replace-containers-with-healthcheck
      match:
        resources:
          kinds:
            - batch/v1/CronJob
      preconditions:
        all:
          - key: "{{ request.object.metadata.annotations.healthcheckSecret || '' }}"
            operator: NotEquals
            value: ""
      mutate:
        # have to rely on ASCII escape (\x24) for the shell evaluation
        # - $(VAR) would cause substitution/failure by kyverno
        # - ${VAR} would cause substitution/failure by flux
        # - \$(VAR) would cause parsing failure ("found unknown escape character")
        # - $VAR does not actually evaluate in this case
        patchesJson6902: |-
          - path: "/spec/jobTemplate/spec/template/spec/containers"
            op: replace
            value:
              - name: healthcheck
                image: curlimages/curl:latest@sha256:e7f227b4e2adafe7bd743bda37f4f6d6f803ea965e9e827061ff07de9d67d433
                command: ["curl"]
                args: [
                  "-fs",
                  "--globoff",
                  "-X", "POST", "\x24(HEALTHCHECK)",
                  "-H", "Authorization: Bearer \x24(TOKEN)"
                ]
                env:
                  - name: HEALTHCHECK
                    valueFrom:
                      secretKeyRef:
                        name: "{{ request.object.metadata.annotations.healthcheckSecret }}"
                        key: healthcheckUrl
                  - name: TOKEN
                    valueFrom:
                      secretKeyRef:
                        name: "{{ request.object.metadata.annotations.healthcheckSecret }}"
                        key: healthcheckToken
