- hosts: all
  become: true
  tasks:
    - name: OS check
      fail:
       msg: "OS should be Ubuntu 24.04, not {{ ansible_distribution }} {{ ansible_distribution_version }}"
      when: ansible_distribution != 'Ubuntu' or ansible_distribution_version != '24.04'

    - name: update APT packages
      apt:
        upgrade: full
        update_cache: true
        cache_valid_time: 86400
        autoremove: true
        autoclean: true

    - name: install common packages
      apt:
        pkg: 
          - neovim
          - tmux
          - inxi
          - unattended-upgrades
          - update-notifier-common
        state: present

    - name: remove default vim installations
      apt:
        pkg: 
          - vim*
        state: absent
    
    - name: create aliases for nvim
      file:
        src: /usr/bin/nvim
        dest: "/usr/local/bin/{{ item }}" 
        state: link
      with_items:
        - vi
        - vim

    - name: remove default MOTD
      block:
      - stat:
          path: /home/admin/.hushlogin
        register: hushlogin
      - file:
          path: /home/admin/.hushlogin
          owner: admin
          group: admin
          mode: '0640'
          state: touch
        when: not hushlogin.stat.exists

    - name: display basic system information on SSH logon
      blockinfile:
        path: /home/admin/.bashrc
        block: |
          if [[ -n $SSH_CONNECTION && -z "$TMUX" ]] ; then
            sudo inxi --color 2 --cpu --disk --ip --ip-limit 1 --swap --memory-modules --machine --network-advanced --partitions-full --sensors --system --no-host --width 120 | grep -v "Output throttled."
          fi
    
    - name: enable and configure unattended-upgrades
      lineinfile: 
        path: "{{ item.path }}"
        create: true
        regexp: "^.*{{ item.key }} \".+\";$"
        line: "{{ item.key }} \"{{ item.value }}\";"
      with_items:
      - { path: '/etc/apt/apt.conf.d/10periodic', key: APT::Periodic::Download-Upgradeable-Packages, value: '1' }
      - { path: '/etc/apt/apt.conf.d/10periodic', key: 'APT::Periodic::Update-Package-Lists', value: '1' }
      - { path: '/etc/apt/apt.conf.d/10periodic', key: 'APT::Periodic::AutocleanInterval', value: '7' }
      - { path: '/etc/apt/apt.conf.d/20auto-upgrades', key: 'APT::Periodic::Unattended-Upgrade', value: '1' }
      - { path: '/etc/apt/apt.conf.d/50unattended-upgrades', key: 'Unattended-Upgrade::MinimalSteps', value: 'true' }
      - { path: '/etc/apt/apt.conf.d/50unattended-upgrades', key: 'Unattended-Upgrade::Automatic-Reboot', value: 'true' }
      notify: restart unattended-upgrades

    - name: check SWAP
      shell: swapon -s
      changed_when: false
      register: swap

    - name: disable SWAP (temporarily)
      shell: swapoff -a
      when: swap.stdout | length > 0

    - name: disable SWAP (permanently)
      replace:
        path: /etc/fstab
        regexp: '^([^#].*\s+swap\s+sw\s+.*)$'
        replace: '# \1'
      notify: reboot

    - name: get SWAP file name
      shell: |
        grep -e "^#.*[[:space:]]swap[[:space:]]sw[[:space:]].*$" /etc/fstab | awk '{print $2}'
      register: swap_file
      changed_when: false
    
    - name: remove SWAP file
      file:
        path: "{{ swap_file.stdout }}"
        state: absent

  handlers:
    - name: restart unattended-upgrades
      systemd_service:
        state: restarted
        name: unattended-upgrades
    - name: reboot
      reboot: 
