- hosts: all
  become: true
  tasks:
    - name: OS check
      fail:
       msg: "OS should be Ubuntu 24.04, not {{ ansible_distribution }} {{ ansible_distribution_version }}"
      when: ansible_distribution != 'Ubuntu' or ansible_distribution_version != '24.04'

    - name: add signing key for k8s repo
      get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-v1.30.asc

    - name: add k8s repo
      apt_repository:
        repo: deb [signed-by=/etc/apt/keyrings/kubernetes-v1.30.asc] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /
        state: present

    - name: add signing key for docker repo
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc

    - name: add docker repo
      apt_repository:
        repo: deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu noble stable
        state: present

    - name: install k8s core dependencies
      apt:
        pkg:
          - kubelet=1.30.*
          - kubeadm=1.30.*
          - kubectl=1.30.*
          # https://containerd.io/releases/#kubernetes-support
          - containerd.io>=1.7.13
        state: present

    - name: mark k8s core dependencies as hold
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      with_items:
        - kubelet
        - kubeadm
        - kubectl
        - containerd.io

    - name: enable IPv4 packet forwarding
      sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_set: true

    - name: generate default containerd config
      shell: |
        containerd config default > /etc/containerd/config.toml
    
    - name: use sytemd cgroup driver in containerd
      replace:
        path: /etc/containerd/config.toml
        after: '[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]'
        regexp: '^(\s*SystemdCgroup = ).+$'
        replace: '\1true'
      notify:
        - restart containerd
      
  handlers:
    - name: restart containerd
      systemd_service:
        name: containerd
        state: restarted
