---
- name: add signing key for k8s repo
  get_url:
    url: "https://pkgs.k8s.io/core:/stable:/v{{ k8s_version }}/deb/Release.key"
    dest: "/etc/apt/keyrings/kubernetes-v{{ k8s_version }}.asc"

- name: add k8s repo
  apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-v{{ k8s_version }}.asc] https://pkgs.k8s.io/core:/stable:/v{{ k8s_version }}/deb/ /"
    state: present

- name: add signing key for docker repo
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc

- name: add docker repo
  apt_repository:
    repo: deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present

- name: install k8s core dependencies
  apt:
    pkg:
      - "kubelet={{ k8s_version }}.*"
      - "kubeadm={{ k8s_version }}.*"
    state: latest
    allow_change_held_packages: true # here be dragons
  notify: restart kubelet

- name: install containerd
  apt:
    pkg:
      - "containerd.io>={{ containerd_version }}"
    state: latest
    allow_change_held_packages: true # here be dragons
  register: containerd_install

- name: install CRI tools
  apt:
    pkg:
      - "cri-tools={{ k8s_version }}.*"
    state: latest
    allow_change_held_packages: true # here be dragons

- name: mark k8s core dependencies as hold
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - kubelet
    - kubeadm
    - containerd.io
    - cri-tools

- name: enable IPv4 packet forwarding
  sysctl:
    name: "{{ item }}"
    value: '1'
    sysctl_set: true
  with_items:
    - net.ipv4.ip_forward

- name: ensure /etc/containerd directory exists
  file:
    path: /etc/containerd
    state: directory
    mode: '0755'

- name: generate default containerd config
  shell: containerd config default
  register: containerd_config
  changed_when: false

- name: modify containerd config
  set_fact:
    modified_containerd_config: "{{ containerd_config.stdout | regex_replace('SystemdCgroup = false', 'SystemdCgroup = true ') }}"

- name: write modified containerd config to file
  copy:
    content: "{{ modified_containerd_config }}"
    dest: /etc/containerd/config.toml
  notify: restart containerd

- meta: flush_handlers
