---
- name: set hostname
  hostname:
    name: "{{ inventory_hostname }}"
  notify: reboot

- name: update APT packages
  apt:
    upgrade: full
    update_cache: true
    cache_valid_time: 86400
    autoremove: true
    autoclean: true

- name: install common packages
  apt:
    pkg:
      - inxi
      - neovim
      - smartmontools
      - tmux
      - unattended-upgrades
      - update-notifier-common
      - yq  # https://github.com/kislyuk/yq since there are multiple with the same name...
    state: present

- name: remove default vim installations
  apt:
    pkg:
      - vim*
    state: absent

- name: create aliases for nvim
  file:
    src: /usr/bin/nvim
    dest: "/usr/local/bin/{{ item }}"
    state: link
  with_items:
    - vi
    - vim

- name: remove default MOTD
  block:
    - stat:
        path: /home/admin/.hushlogin
      register: hushlogin
    - file:
        path: /home/admin/.hushlogin
        owner: admin
        group: admin
        mode: "0640"
        state: touch
      when: not hushlogin.stat.exists

- name: display basic system information on SSH logon
  blockinfile:
    path: /home/admin/.bashrc
    # yamllint disable rule:line-length
    block: |
      if [[ -n $SSH_CONNECTION && -z "$TMUX" ]] ; then
        sudo inxi --color 2 --cpu --disk --ip --swap --memory-modules --machine --network-advanced --sensors --system --no-host --width 120 | grep -v "Output throttled." | grep -v "calic*" | grep -v "noprefixroute" | grep -v "1IET" | grep -v "VIRTUAL-DISK"
      fi
    # yamllint enable rule:line-length

- name: enable and configure unattended-upgrades
  lineinfile:
    path: "{{ item.path }}"
    create: true
    regexp: "^.*{{ item.key }} \".+\";$"
    line: "{{ item.key }} \"{{ item.value }}\";"
  with_items:
    - { path: "/etc/apt/apt.conf.d/10periodic", key: APT::Periodic::Download-Upgradeable-Packages, value: "1" }
    - { path: "/etc/apt/apt.conf.d/10periodic", key: "APT::Periodic::Update-Package-Lists", value: "1" }
    - { path: "/etc/apt/apt.conf.d/10periodic", key: "APT::Periodic::AutocleanInterval", value: "7" }
    - { path: "/etc/apt/apt.conf.d/20auto-upgrades", key: "APT::Periodic::Unattended-Upgrade", value: "1" }
    - { path: "/etc/apt/apt.conf.d/50unattended-upgrades", key: "Unattended-Upgrade::MinimalSteps", value: "true" }
    - { path: "/etc/apt/apt.conf.d/50unattended-upgrades", key: "Unattended-Upgrade::Automatic-Reboot", value: "true" }
  notify: restart unattended-upgrades

- name: check SWAP
  command: swapon -s
  changed_when: false
  register: swap

- name: disable SWAP (temporarily)
  command: swapoff -a
  when: swap.stdout | length > 0
  changed_when: true

- name: disable SWAP (permanently)
  replace:
    path: /etc/fstab
    regexp: '^([^#].*\s+swap\s+sw\s+.*)$'
    replace: '# \1'
  notify: reboot

- name: get SWAP file name
  shell: |
    set -o pipefail
    grep -e "^#.*[[:space:]]swap[[:space:]]sw[[:space:]].*$" /etc/fstab | awk '{print $2}'
  args:
    executable: /bin/bash
  register: swap_file
  changed_when: false

- name: remove SWAP file
  file:
    path: "{{ swap_file.stdout }}"
    state: absent

- name: increase number of inotify handles
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: true
  with_items:
    - { name: fs.inotify.max_user_instances, value: 8192 }
    - { name: fs.inotify.max_user_watches, value: 65536 }

- name: schedule daily short smart drive test for all drives
  copy:
    dest: /etc/cron.daily/smart-test
    mode: "0755"
    content: |
      #!/bin/sh
      if [ -b /dev/sda ]; then
        smartctl --test=short /dev/sda
      fi
      if [ -b /dev/nvme0n1 ]; then
        smartctl --test=short /dev/nvme0n1
      fi

- name: schedule weekly extended smart drive test for all drives
  copy:
    dest: /etc/cron.weekly/smart-test
    mode: "0755"
    content: |
      #!/bin/sh
      if [ -b /dev/sda ]; then
        smartctl --test=long /dev/sda
      fi
      if [ -b /dev/nvme0n1 ]; then
        smartctl --test=long /dev/nvme0n1
      fi
